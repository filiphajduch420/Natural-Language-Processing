import scraper as sc
import translator as tr
import sentiment_analyzer as sa
import os

# Konstanty pro v√Ωbƒõr re≈æimu (0 = pou≈æ√≠t soubor, 1 = p≈ôelo≈æit API)
USE_API = 0
TRANSLATED_FILE = "reviews.txt"


def save_translated_reviews(translated_reviews):
    """ Ulo≈æ√≠ p≈ôelo≈æen√© recenze do souboru """
    with open(TRANSLATED_FILE, "w", encoding="utf-8") as file:
        for review in translated_reviews:
            file.write(review + "\n")


def load_translated_reviews():
    """ Naƒçte p≈ôelo≈æen√© recenze ze souboru, pokud existuje """
    if os.path.exists(TRANSLATED_FILE):
        with open(TRANSLATED_FILE, "r", encoding="utf-8") as file:
            return [line.strip() for line in file.readlines()]
    return None


if __name__ == '__main__':
    url = "https://www.csfd.cz/film/237486-pernikovy-tata/recenze/"

    if USE_API:  # Pokud je API zapnut√©, p≈ôelo≈æ√≠me nov√© recenze
        print("üìå P≈ôekl√°d√°m recenze (API)...")
        reviews = sc.get_reviews(url)

        if reviews:
            translated_reviews = [tr.translate_text(review) for review in reviews[:5]]
            save_translated_reviews(translated_reviews)  # Ulo≈æ√≠me pro dal≈°√≠ pou≈æit√≠
        else:
            print("‚ùå ≈Ω√°dn√© recenze nebyly nalezeny!")
            exit()

    else:  # Pokud API nen√≠ zapnut√©, pou≈æijeme ulo≈æen√© recenze
        print("üìå Pou≈æ√≠v√°m p≈ôelo≈æen√© recenze ze souboru...")
        translated_reviews = load_translated_reviews()

        if not translated_reviews:
            print("‚ùå Soubor s p≈ôelo≈æen√Ωmi recenzemi neexistuje! Zmƒõ≈à USE_API na 1 a spus≈• znovu.")
            exit()

    print("\nüìå Sta≈æen√©, p≈ôelo≈æen√© a analyzovan√© recenze:\n")
    for i, translated_review in enumerate(translated_reviews, 1):
        sentiment, score = sa.analyze_sentiment(translated_review)

        print(f"{i}. EN: {translated_review}")
        print(f"   üîπ Sentiment: {sentiment} (score: {score})\n")